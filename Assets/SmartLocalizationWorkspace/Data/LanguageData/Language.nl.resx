<?xml version="1.0" encoding="utf-8"?>
<root><!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="elephant.alone" xml:space="preserve">
		<value>Mysterieuze stem: "Ik ben eindelijk alleen..."</value>
	</data>
	<data name="elephant.giveonesie" xml:space="preserve">
		<value>Olifant: "Hier, trek aan. Je ziet er vreselijk uit!"</value>
	</data>
	<data name="elephant.goodbye" xml:space="preserve">
		<value>Olifant: "Tot ziens, vreemde olifant!"</value>
	</data>
	<data name="elephant.hello1" xml:space="preserve">
		<value>Mysterieuze stem: "HALLO?"</value>
	</data>
	<data name="elephant.hello2" xml:space="preserve">
		<value>Mysterieuze stem: "IS DAAR IEMAND?"</value>
	</data>
	<data name="elephant.hello3" xml:space="preserve">
		<value>Olifant: "Oh, uh, hallo!"</value>
	</data>
	<data name="elephant.help" xml:space="preserve">
		<value>Olifant: "Zal ik nu jou helpen?"</value>
	</data>
	<data name="elephant.trunk" xml:space="preserve">
		<value>Olifant: "Sorry, ik was mijn slurf aan het schoonmaken..."</value>
	</data>
	<data name="elephant.weird" xml:space="preserve">
		<value>Olifant: "Jij bent wel een erg vreemde olifant!"</value>
	</data>
	<data name="hamster.ahoy" xml:space="preserve">
		<value>"Ahoy matey!"</value>
	</data>
	<data name="hamster.blimey" xml:space="preserve">
		<value>"Blimey! Nice work mate!"</value>
	</data>
	<data name="hamster.fixmeboat" xml:space="preserve">
		<value>"I trust yerrr fixing me boat now while I eat me nut and get  some Z’s"</value>
	</data>
	<data name="hamster.getoverhere" xml:space="preserve">
		<value>"Get over here lil’ Cackle fruit"</value>
	</data>
	<data name="hamster.hoist" xml:space="preserve">
		<value>"Weigh anchor and hoist the mizzen!"</value>
	</data>
	<data name="hamster.landlobber" xml:space="preserve">
		<value>"Now off you go you filthy landlobber"</value>
	</data>
	<data name="hamster.lostnut" xml:space="preserve">
		<value>"I lost me nut yonder ‘nd I ain’t getting me nut that easy myself! Go fetch it for me!"</value>
	</data>
	<data name="hamster.shivermetimbers" xml:space="preserve">
		<value>"Shiver me timbers! Ye did it."</value>
	</data>
	<data name="intro_1" xml:space="preserve">
		<value>On a normal sunday morning</value>
	</data>
	<data name="intro_2" xml:space="preserve">
		<value>I was playing with a friend</value>
	</data>
	<data name="intro_3" xml:space="preserve">
		<value>We embarked on a magical adventure</value>
	</data>
	<data name="intro_4" xml:space="preserve">
		<value>When all of a sudden, my friend fell and disapeared between the clouds</value>
	</data>
	<data name="intro_5" xml:space="preserve">
		<value>Determined to find him, I dove through the clouds</value>
	</data>
	<data name="intro_6" xml:space="preserve">
		<value>But instead of finding my friend, I found something completely different...</value>
	</data>
	<data name="intro_7" xml:space="preserve">
		<value>Towers as far as I could see</value>
	</data>
	<data name="intro_8" xml:space="preserve">
		<value>Would my friend be up there?</value>
	</data>
	<data name="menu.controls.back" xml:space="preserve">
		<value>Terug</value>
	</data>
	<data name="menu.controls.credits" xml:space="preserve">
		<value>Credits</value>
	</data>
	<data name="menu.controls.play" xml:space="preserve">
		<value>Spelen</value>
	</data>
	<data name="menu.controls.preferences" xml:space="preserve">
		<value>Opties</value>
	</data>
	<data name="menu.controls.quit" xml:space="preserve">
		<value>Stoppen</value>
	</data>
	<data name="menu.controls.quit_to_menu" xml:space="preserve">
		<value>Naar Hoofdmenu</value>
	</data>
	<data name="menu.controls.reset" xml:space="preserve">
		<value>Verwijder spelgegevens</value>
	</data>
	<data name="menu.controls.restart" xml:space="preserve">
		<value>Begin opnieuw</value>
	</data>
	<data name="menu.controls.resume" xml:space="preserve">
		<value>Verder gaan</value>
	</data>
	<data name="menu.labels.audio" xml:space="preserve">
		<value>Audio</value>
	</data>
	<data name="menu.labels.camera_sensitivity" xml:space="preserve">
		<value>Camera gevoeligheid</value>
	</data>
	<data name="menu.labels.language" xml:space="preserve">
		<value>Taal</value>
	</data>
	<data name="pressinteract" xml:space="preserve">
		<value>Press "interact" to talk to the Captain</value>
	</data>
	<data name="tooltip.jump.hint" xml:space="preserve">
		<value>Spring om verder te gaan</value>
	</data>
	<data name="tooltip.jump.title" xml:space="preserve">
		<value>Druk op de spatiebalk of (A) om te springen</value>
	</data>
	<data name="tooltip.movement.hint" xml:space="preserve">
		<value>Beweeg om verder te gaan</value>
	</data>
	<data name="tooltip.movement.title" xml:space="preserve">
		<value>Je kunt bewegen door middel van de WASD-toetsen, de pijltjestoetsen of door de linker analog stick op de controller te bewegen</value>
	</data>
	<data name="tooltip.onesie.chicken.hint" xml:space="preserve">
		<value>Spring om verder te gaan</value>
	</data>
	<data name="tooltip.onesie.chicken.title" xml:space="preserve">
		<value>Dit is een onesie. Onesies geven je speciale vaardigheden, deze onesie geeft je de mogelijkheid om dubbel te springen</value>
	</data>
</root>